/**
     * Decrypt a salted msg using a password.
     * Inspired by https://github.com/adonespitogo
     */
    var keySize = 256;
    var iterations = 1000;
    function decrypt (encryptedMsg, pass) {
        var salt = CryptoJS.enc.Hex.parse(encryptedMsg.substr(0, 32));
        var iv = CryptoJS.enc.Hex.parse(encryptedMsg.substr(32, 32))
        var encrypted = encryptedMsg.substring(64);

        var key = CryptoJS.PBKDF2(pass, salt, {
            keySize: keySize/32,
            iterations: iterations
        });

        var decrypted = CryptoJS.AES.decrypt(encrypted, key, {
            iv: iv,
            padding: CryptoJS.pad.Pkcs7,
            mode: CryptoJS.mode.CBC
        }).toString(CryptoJS.enc.Utf8);
        return decrypted;
    }

    document.getElementById('staticrypt-form').addEventListener('submit', function(e) {
        e.preventDefault();

        var passphrase = document.getElementById('staticrypt-password').value,
            encryptedMsg = 'b043a97f1920d84360a57ee728bd0bfa855a00a6df0e19d30b49ff6b0a4cd7e338e3242a9891270ebb8023fd3da4b3ca3e21e5c656a7206bccec399bccd17df2PJ7VWoXGLAuurAWnKRoLKPmDzvTIIea+VPg60zrncnke95F4eqSopdN66lZ5mBZ16d9fF2Ye2nEZhBQ+3tTcaNyX8E+Tu1XCq1jZM1FLMvAlaxsSzQFkWaALH6BYS6g+AbOrFWle9SMOEyiUJQZzuFaBlPMrI0gFKvI7yBEox4VaI9Mtu1hYe/xVD5ezfYTCWS6Lkf/u8hfxbDOk49npF9tyZS6zuvN7+1pAGAT1A+0QLRyTxIg6GJ9T50ciFGJU8LZUkI3928cXsXQaJy1JSauDuhiL1ALEkR+sNtzpcSqZa2d6XStM9wS6Z9q/xLp8u9N98++3Qbj7nnKsYmEL+lyfmtf06KEYcdrPDfl+xBVs6u91CA3ehXhZxOrjuDrLSCvpWmMkENfaLCK8ipZ4BgWtK8ZgWuJ2MRQwmxo5xbXkmNvnnE9U8Gskuf+q1KsYfS3rrRh4yU0WDQhM6sjbBX0pKWrWyzf6h7QI3sml1FamH7nTGF5POp1AXrMtFUogc7MqSHn8ku2fG//9xpdgvH2niZ3OCQB/ko4/ZcX9UVwz/fgdsJX8OjFJNEQVxUZZJWkOFPQWYCgMvwx2PvCZli8OJjsIsjHXLd9ozGp4DJOLBYfaYcwqr7UGWTdu9Ahmpr9/X/s0sN93d+7iOS+nDK0EEzoUtnAsNRj5ZD8Bbf1A/LWVkyYzdzrryx/TtzaL0ebl/KulJ5+PhmK1zBmqIII7OqjwO3qY+JVs6VR57qelY+nBWlQmHp1AbtkvGbPmn680qYF65qFYHw3UGiaJGOj6RU++hsADq/7iGZJ1tWlswhxtJC8e3ecOMtELlCPXXmcpMq1c8QZZyEag8cxVLhsrFGWYYV8AVBPcNr8ryt1UXTswMCUV/1m2a0X36BZnMTZ8IJ2lMbDqmWzM3sMsevLEZ1kUOBwzTAB2+kR4RMBnaOzXgonZYsNJN1/viiqz6u7HeS+KXPilpPcZemiblWIUfi2RwlKrP+IcCF0mi913qcoKR0wnTVafKWwV8+DPrhz30UNdiYpO1idCA/ULAqJMLTOdrJOmYkgdn6feuS5r8eqiuKYNF7zras/MLr9RByZrdgTHT+uqSQqLCMhast1eN+jp3gG7pgV9iaOfs8wd3FzLvhuAaxOxp6kolokMaSi44jNFKwIJ/mEINwqpcgs3aAahrQtFkSS/jssdTI/O44LKLApFneGPFZnoWjSACV9BdSHMmKFoTYfx8ipwypxp9mwi7OuoLlOpMJf31O+sXS1v/SAzf/fqIpuiv9AQwSLP7P2tUGemFm6QxdqYIUXEkWg1lDAnaNxDNL7dzb/eG8VDIPN/1hZDKvy8F+B2QkJcsEaC0ShBxKXMEtLJ8nJvpbpwogZSX2ctHsTU+bzLX2CkdauAldYoSUZl2LCGzlqa+bpzQUklfhTcBoFChst5nUxS685+QglhQAP1XY3PhwuOKot/8j9VXadfEJXTz5h5rpypJGBGXULCSWtPq6gCZe8MB4bpFMpYdKbifgFMSpJRYi2IZ/vWn/9dq+9V3+Uy9tqqzS34LbQkWOu2lIVdiatFNR3jdRibSzkbuxKafCJp6so5dAWmvwsa5J1fTDzN9xMNOvMjxk1jcKb4JQMD0+XyqH68Ot5QX/O/cy2yp1x6ehCBq2wWxNtpaiTFtqs/f+QotediVpVr6tl5FQoD3H/ruimzXN+1bw1sMGrUaycrHcWMq9urgJrtM9b4+eX9DqQcJrTwmoRRbXGw4PlwnEidVocHIloySJDBc21Myl8JQ03tjFxWlfL6bGgGXAGx2nOp0HoDky1HoCz63LVYfYocPyrtekOhkdEyK8SsIR6orkSc8zM2gYTxzM87Q2p1drmyLnACZJkOzsEZy7RTA3t5S/c7+ySL79WJdkk9y4EMzryYR5l5O2nbgqrKjcY5LqpH/r0tFj4yReyQancWrM+ewUMK9RaAbpnYrU36/W1ZTOri8CW6Eb5axFBbrLD9ib+LnBoVu2dhvMPnHwwRBCKGXzY6KgJ9ceZpyypjShl18CGmZ0xOa0wBMcnTN7aWxOLFinXPHcnz9sxB7bfNajINhtgRw0rhZDp8OjllXcE8o4uQYpWjL/3+TdRVeHWMzF0j5ONmg6/0v6Km9Kb7elaR9c8JL+m8+to8D81PyRRSHUzFuJrzv2JfjTAFGpUjIwh9PrZjc7gTufElqKLdINuPg5pJ8C3m+nudqorQEwH37VOVtcQ8SYRV4bMqaDzEFxf9i5mxmRXCXBa6S8Q6MoGQVpYPCFL3ZT4aZsLCGDtIQVvc/OrLdLydQJM/dvXyCygyT15ZhtH0q57HsCSp5GA3kC+MkPLahW4wHp9x5N7HjzjT8ZKPZXTNtj81V04cFgZ569IieTS8RDyegLXDw5LDEZbTmteXWktc5vOirRekcqOG0yG8nFEY3CiHy5lmWiKIJBY0LCWMAj+hRnORSr7H6TrDlOPsKXfJR4AtyT1++t+pLasuxGI1uXJTBKlKUzbx3Lo6v68Gu1qbgdirNMgH5tfDocsI6NlVzy4H5RmBkBCv5xwOfdDaGJMp5LzK/D0ELbCUhmZzRW13FZinPjGTvbUa1Ixvr1j6ZVx2h80nuRpZPH0bdtSiEydRDG0XYijpt7soFZ81eJ8dzdUxNmqFeyixXlb8K32UiokJIlHpjnBItzd5rzjGHgOm1mi1zX25vy1YhAQJChuL85yLWmRVoxbfja34w1GRSqRqM+CAGHknDdtDL6UhMlaDBVwAL5iYAHkRgziIffg/fGIm85ko1Kt47O0l8xiVIKXhCv2dFOfqdsa0ggx4YrNUxvlpoXfe5+Bn2jOG2FOiCqRxL0na+OiKC/eIFw2sl+hL6fuHfmhU1C4HroiHPxNitUOZmH2bHwzZZ8vtNvSOc7+KC0Bsxdp3pUAfSHHG2aa8DvN6RA2I1kZUMrDC10XisIhX5ltBAYqB6EOQpIPWVXDvG+zuTxX8GhcvATHxR/7Pzv9/aqX1sB1kpJ/DsceK9xe5Bt7UBeOqYt36bGiTUra3JBQIHqFxbfLwIpeC2AsuYgpirAP26rUED3KIqh4R6OvXLazh5B3v1CGGehWft8lMRIvKZL0GasfW2reWCnMoMKQXM0jPu28ds57fRcCpx13/mPjAw+89nGYBt90pcd4Q+Rr4o/AF2VisRzAjFN1T25kJ+3hBj3xess3vBOIoP1tueiik8U+6aXoEZDN6/h64VzdqIk2nf18B/pZwi7tpOs8rTPyBEVl3kJvSIuHm5eI26D7oXKyAYGsS0U/T5mCrCouDfIQWX2l/1pq7pEnLgDwKSY7IJApJ8pr423VCScGvXxWCyu9iZSOHFryl0BZ4kpH92wjbBDq5SVE/6hrXt4hW+TTpXdOMzfvSjUCcN4GaUkEYUuqYwupiXejL45yvKdXip2xRfcXq63jzhC+JFs6FmnVlPjGWbmnh2IRzrcWyeczOq9nzuQ55nC7qjeSSaCmmuoQgnSD2bPUoAauzkz96ipAENEmXYex5pt9a04Gln5VrLxV0NangHdeV5MbN5p4MXL/Gf9+7BpamFZhjvszVrbaquv4812uFwJRwc73j/7/xW/FTdqf1lAwODoi6+v05QNTdW6oP0JBXVjmkUKP2TB+zSPQ1bVw47Q1qzxevZPerLh0tVrrNaK5514Qj3Rtrgs203bg4TNvAVMA0Z6rxJWuBKCoAoVWoFAKbEO2/BpiI6NO/ACnnFavHod4rQFo4yGLyHSlbk40rVpH42B4tuA9vGjpb6aEMIUJJZcBu3x55zZgw8mUReFQD5Yz3liiJTfh6Qc+b8k+QdyiyB7mJotI5Yilv4F2rxQAn2h7rDH4Z6ZMR/+HWYistky1AQMKd79ftpwqXqql3pOKhtDX5wZRy214sK8XE3UJLVEPqM9fuBwMFbF0eRBxP+J1wUVfVDmxJXaKI65FWJxMXnG6VCoD+hb9rSDJeIPGo+FcugXDVxpr8mNnmLsRphJHr6uHQeIu2IO1YhQhc5XSmJyDKE99FN5dBkb76aXdikCCKuEmg0IbQl8jE6wy/Dwne/9B/ae/xHCMmfMoNj6QVeIp8v2iab3+MbNQuRFFUs9mXe+RzDDbAouKBw70ScmGuckEXOv99HVctbvbFDZ6VoRuqPBhjqpZpmeH+Sdn96BJBKAs7qwaJGNKI+hU2NXGFs+3xJZJLv1tojkaFThsRPUo+2128g8MC4q4OwRZ74QDEEgI8FuJAWxlCt3H+Yi0J8OBYDlOIpNRhZqZ3UdnSo6pvnk6mOBc+Pq77TtwZDp8+il0V2pLIE7ToLB85klfyzsJQXSeI0abei8MnewGBvkQejIA52DmySAcf4SKWphHpMoaH0M6Bpv3AjWkrZT1sw0IJmVq8Mmh/Xh7hC+yvcw3GcaVlBME9mlM7Hq19zJWZ0HIC4BqsrK2yveIxH8FgwlV/bJkQ4ODaRwcu2p/w5cjI8SlxgioCBweUqaDaavlku7yxrDSEYuZOveqWOgsJqxiaHwNRNZn6Ep/9w/ABkRw5etEKejxVH0d9NWru9p6/9Rv/GoJ8dHuUbjNNc4O4piuWUSQbiUogMmGHuTv53N5FKwkIZT265bKa+hkxq3d2zfrhP4cw2YOJGIFHzNDpVy0i8hBBdmvuff1klb4qgeneekcBu0c/ayeKUSQlhV4QeTJrrUUknAdrT7aboOJ9d1PU+empeOHuUauUdPp7iumF/9vNvnX/4v6zU6Z6WF19/NddxxKUThZd9zCW+DkTbGPopq/P3te2rMjuCgCSY/0t2AwswJ/g84P1LPeOBHFA/NVCotoavzv6VT9AguzZPVlOR1RC1fBSGlqLUqzyr73OMNPZztoXe7QjQgbgxpyD73B1FzVZ9dTffxWSmjpZA+oOodWIaCGl/nRvdHQf1QKxbApH725E5HEIplPEEB0NNz0xM+fL8eVLItHN9TsA795ECgRTr4M/zqt+GERyJcDL7/yXnLyWKbLO7EQDMk6jOK2z70w/DyPsdEa9y1B5onHGwMAend/UH9HAjVpyHg1ZRdRi9zNHZFpJWKXE4P569CIEn9fiO2QloXvZl6MygrfNTA2hfw8ztZWLu7oxsEKNq+PS2AByYLnMdgm1dN2+283JgQdZMOhh7EPKhAoUNlvZB8eGfIOSqbjO7lkUV0bTmuN5i7do9XgRFj9wdnvR7CzApdojg+RsJJ7Fa4mcNONcjsbQJoRjyZnD5Mxtq99ZpuDdOmNVgKS7VjUQOgaKllOui/yS4ZnoYdjqfZEz3sPvLxywWc0ukS4mjGjvCmFI81nZ1WAX+gnBMMxtzqGuA3qh0EU/fRME5u+M239a2gkYR9nARJdOo/IZJAQ9V8Jb6vjdhknr53InnmwKOXnZWQZn1U4BHV/kkFsLiBlkFSmO+oaKawXOfazQbY50DquG0KeYvWrWJmYR/PAQUYxumJcWOiXLKu+tlTJiPAsDoiOdbvKtwh9otJkPLVjEKvTP22ojLc6zg4184ZtzKkl/zhf+MPaJPTYvRsrGd1duHnui1oYr6KrRDmeHrs8Us85CV/yfxlVRGXSrFDod9vxH65tzdKU/GTkblXcISClUaWuV8WVl4sH+Yoa1AB7HuVftJitquAPgfeoviXAjRhQbQnspvTk3RjzplV2B292FtDITwhsX1/kyLgEOT3Ol0zOgzLBNBH2LAt9dhDwqPE5PyryUPUgPxK8+yNMvdxc6xAxhOwlBvQcb23cnamuCH7Sr74JxS7G+r568Ili7LYpfeFGYePilehjoUF/hAKw4RI4LxI/BJWUAV2qBpf5wJW11Ny5Vg4cl3bypzIKVU3+u1f+2wpNlq5DdJFEitrLu412gSRK0lYDKR1GdrPU92I+fw70BDrqiaPyqDL1OPP4VweVWLG/ljGvOYEWfXwChAw/NO33I62BSf+rTHMVgHpUEJ25es5lXa5os045IQwBicYLOMzPoIB11ij2tS9w1m8X2m9LZV9rPom9DUZ1TABKajGKrHFL7qI4Nil17EoeUk3iR0mX/hFq5jaVXvEyChYSwtb1j9ho18vex3+rem85kCbQmlHzVfXzJgZdQ5RiA8RMjIwjVBT0ZLc3cJWM4rA1sU4kRA+/Or8ExB3XdPunxSAqQVV1Fywe8uBj02TSQykg2c9c7iTix44r06U5K9EbRH2IQAeMLIfc3vv+hSYMO11AssLHuLHKZXFaYTrTdZ4J+ZicmMeb+NDv7DbcGuwuEuNbRyxe0B3zJdbKOxZIPT+1Gp6MXgDiyxeACDffJtmVnR1sXexeOK9mvGiVkz+UXBV4cVu8jJ5RLn2yi4tSAu9tmJU28eR1pSSldXn1g8W49uEwogZZTYoE2puxKk8CxpMW2eKQlSbemP5pwFGh/wvHXvszX06lO4U8gfsrMGh1fZ/GIEZpC0zRSO6pg3rHYKro3EXDe4GK0xeDbHtm/e/9ha5Ppg3yQNBmQfNZRc9fSE2xkntOrpJ9QMVebQ4JXbM1FzxMXKgXIZTRA/9UsnEdawtoLakUMwDzxWARdfcZIR/FfbN9E+FboIjIkXEkYgqtRn89pOyqU2wssN6JTGiKVn2/kGDW+/ZiFFdAL2Kb38aW1pqxuTCAOvkcYb/JJex8a+yhenxIwJxU7IY5AWQQY1+QaX3QfoRuGHt3/3Hr4M87LJ7brBOaMyq0eiVMx130/MubAQwYeSvOQ2Pq304RnTAZWbiGqj1ACkZIG0K8tV13OLKqotI68+HflfDlCGzFiXjQqMjhxXgEFW86PCffAldu+b6fnsALu845oPYCjOaUqBQOvWzuYYlbQfkNI4/4jVRPm118KdNuc+6bmRipt4Od1tEg3WT6rp2j37dq1Xmo0xXzQCI8uzllPN16PNietVvr6FfRvrhxRPYO2hv2uhWDQtbC0bLNru5m24VOCtFweoEJB1Jmtq/MnbZ9xs7AywadZ/+UouJBH9PrDhw4utyBwFsnJ3M76LQ/iJ/9UAiT38sbE2eFyyh0CrnRqzBqlemisbU7GQhpsbwK71a9kqIEcwwpxUjnnk+G3/e7GnfD0+X0igEjrZzPNsGSa5qPnoJQ4FkzmMaaI61Wyro+NzCBfLuVBiCLFt+07o1fBHkJcaSZmNlqJLS5bXnym0JCigcKoM7mbcdKv6J06DKv3uaVm4oMq1bCqp4+o2mLSzfjAi9/o20Ao8aKH9xlTKl4sk36SmnRDeavO7Kw9xhCMjyXoAWq1lEVxCJ+HawwWOndgmQgn073+imMJWngMblyMuKYQIA45adf0PUgLFdOvA3eixJ05td/m8zEp9at0QJZXyAyxNbLNNqTrLkoy2EJXyLDx6OW7n52bd5FN0rcURzKLoMdAWM/UJVJm0G1icw+czz8y9ngJWhBv9HWbqMeckRuxKnusH4s+UKe0D1u1cBJJSArZctexGZg4p4f5VFYhF3uuVAIZ5N/o+xLOzrPznDXiAq9u7Gv+DoVwyafAQvWhIGoE9fkRtA8CZfxKRiApYb+q0pdhwdbj0ECjK3lPF5kt5+N1T7Plyl0Y8B/PsoNp64Ogdbhi4YqLsVoOzLYWazQ6sMTw2jXFbwBWpkDplwSLqFdgoV2trxOaDqj6YPn41tiF6/XPRh8qzZ6BSxcQ7BNBUm6eA7nOPbbIZwz7HLNYwfd8+pLrTCqI5y3ZcEHxxhfPttbJqurdY7IgVaxMX+4m36ML5gEa38p+nUIC7qeDhEOCyiQ=',
            encryptedHMAC = encryptedMsg.substring(0, 64),
            encryptedHTML = encryptedMsg.substring(64),
            decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString();

        if (decryptedHMAC !== encryptedHMAC) {
            alert('Bad password!');
            return;
        }

        var plainHTML = decrypt(encryptedHTML, passphrase);

        document.write(plainHTML);
        document.close();
    });